From 37dfb62264baec527d56aaf20db887840bec1ea1 Mon Sep 17 00:00:00 2001
Message-Id: <37dfb62264baec527d56aaf20db887840bec1ea1.1522099415.git.Jim.Somerville@windriver.com>
From: Scott Little <scott.little@windriver.com>
Date: Tue, 9 May 2017 13:10:22 -0400
Subject: [PATCH 01/32] Initial kernel build for TiS

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 SPECS/kernel.spec | 45 ++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 42 insertions(+), 3 deletions(-)

diff --git a/SPECS/kernel.spec b/SPECS/kernel.spec
index 5ba126c..55901b6 100644
--- a/SPECS/kernel.spec
+++ b/SPECS/kernel.spec
@@ -3,7 +3,7 @@
 
 Summary: The Linux kernel
 
-# % define buildid .local
+%define buildid .tis
 
 # For a kernel released for public testing, released_kernel should be 1.
 # For internal testing builds during development, it should be 0.
@@ -61,7 +61,7 @@ Summary: The Linux kernel
 %define with_dbgonly   %{?_with_dbgonly:      1} %{?!_with_dbgonly:      0}
 
 # Control whether we perform a compat. check against published ABI.
-%define with_kabichk   %{?_without_kabichk:   0} %{?!_without_kabichk:   1}
+%define with_kabichk  0
 
 # Control whether we perform a compat. check against DUP ABI.
 %define with_kabidupchk 1
@@ -78,7 +78,7 @@ Summary: The Linux kernel
 # Set debugbuildsenabled to 1 for production (build separate debug kernels)
 #  and 0 for rawhide (all kernels are debug kernels).
 # See also 'make debug' and 'make release'. RHEL only ever does 1.
-%define debugbuildsenabled 1
+%define debugbuildsenabled 0
 
 %define with_gcov %{?_with_gcov: 1} %{?!_with_gcov: 0}
 
@@ -410,6 +410,22 @@ Patch1000: debrand-single-cpu.patch
 Patch1001: debrand-rh_taint.patch
 Patch1002: debrand-rh-i686-cpu.patch
 
+# Titanium Cloud sources here.
+# Not sure if we need to worry about numerical collisions between
+# SourceX and PatchX, so let's not risk it
+Source30000: kernel-3.10.0-x86_64.config.tis_extra
+
+# Titanium Cloud patches here.
+Patch40001: Notification-of-death-of-arbitrary-processes.patch
+Patch40002: CGTS-3456-emit-CPU-logging-on-hard-soft-lockup.patch
+Patch40003: CGTS-3744-route-do-not-cache-fib-route-info-on-local.patch
+Patch40004: ixgbe-fully-disable-hardware-RSC-logic-when-disablin.patch
+Patch40005: ixgbe-disable-LRO-by-default.patch
+Patch40006: ixgbe-RXC-nextp-bounds-check.patch
+Patch40007: PCI-Add-ACS-quirk-for-Intel-Fortville-NICs.patch
+Patch40008: affine-compute-kernel-threads.patch
+Patch40009: Affine-irqs-and-workqueues-with-kthread_cpus.patch
+
 BuildRoot: %{_tmppath}/kernel-%{KVRA}-root
 
 %description
@@ -716,11 +732,25 @@ cd linux-%{KVRA}
 # Drop some necessary files from the source dir into the buildroot
 cp $RPM_SOURCE_DIR/kernel-%{version}-*.config .
 
+# Copy any TiS-specific config changes
+cp $RPM_SOURCE_DIR/kernel-%{version}-*.config.tis_extra .
+
 ApplyOptionalPatch linux-kernel-test.patch
 ApplyOptionalPatch debrand-single-cpu.patch
 ApplyOptionalPatch debrand-rh_taint.patch
 ApplyOptionalPatch debrand-rh-i686-cpu.patch
 
+# Titanium Cloud patches here.
+ApplyOptionalPatch Notification-of-death-of-arbitrary-processes.patch
+ApplyOptionalPatch CGTS-3456-emit-CPU-logging-on-hard-soft-lockup.patch
+ApplyOptionalPatch CGTS-3744-route-do-not-cache-fib-route-info-on-local.patch
+ApplyOptionalPatch ixgbe-fully-disable-hardware-RSC-logic-when-disablin.patch
+ApplyOptionalPatch ixgbe-disable-LRO-by-default.patch
+ApplyOptionalPatch ixgbe-RXC-nextp-bounds-check.patch
+ApplyOptionalPatch PCI-Add-ACS-quirk-for-Intel-Fortville-NICs.patch
+ApplyOptionalPatch affine-compute-kernel-threads.patch
+ApplyOptionalPatch Affine-irqs-and-workqueues-with-kthread_cpus.patch
+
 # Any further pre-build tree manipulations happen here.
 
 chmod +x scripts/checkpatch.pl
@@ -760,6 +790,15 @@ for i in *.config
 do
   mv $i .config
   Arch=`head -1 .config | cut -b 3-`
+
+  # Handle Titanium Cloud customizations.  Use -n to match oldnoconfig below.  We want this before
+  # the make line below so that the one below removes any dependencies of ones that we
+  # turn off here.  We also want it before "make listnewconfig" so that we can set the
+  # config option for new configs introduced in the Titanium Cloud patches.
+  if [ -f ${i}.tis_extra ]; then
+    scripts/kconfig/merge_config.sh -m -n .config ${i}.tis_extra
+  fi
+
   make %{?cross_opts} ARCH=$Arch listnewconfig | grep -E '^CONFIG_' >.newoptions || true
 %if %{listnewconfig_fail}
   if [ -s .newoptions ]; then
-- 
1.8.3.1

